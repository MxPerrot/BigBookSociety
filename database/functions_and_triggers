SET SCHEMA 'sae';

CREATE OR REPLACE FUNCTION insertUser() RETURNS TRIGGER AS $$
  BEGIN
    postal_id = SELECT id_code_postal FROM _code_postal WHERE code_postal = NEW.code_postal;
    IF postal_id IS NULL
      postal_id = INSERT INTO _code_postal(code_postal) VALUES(NEW.code_postal) RETURNING id_code_postal;
    END IF;

    user_id = INSERT INTO _utilisateur(mail_utilisateur, sexe, age, profession, situation_familiale, frequence_lecture, vitesse_lecture, nb_livres_lus, id_code_postal) VALUES(NEW.mail_utilisateur, NEW.sexe, NEW.age, NEW.profession, NEW.situation_familiale, NEW.frequence_lecture, NEW.vitesse_lecture, NEW.nb_livres_lus, postal_id) RETURNING id_utilisateur;

    format_ids = SELECT id_format FROM _format WHERE format IN NEW.formats_preferes;
    FOREACH format_id IN ARRAY format_ids
    LOOP
      INSERT INTO _format_utilisateur VALUES(format_id, user_id);
    END LOOP;

    genre_ids = SELECT id_genre FROM _genre WHERE libelle_genre IN NEW.genres_preferes;
    FOREACH genre_id IN ARRAY genre_ids
    LOOP
      INSERT INTO _utilisateur_genre VALUES(user_id, genre_id);
    END LOOP;

    auteur_ids = SELECT id_auteur FROM _auteur WHERE nom IN NEW.auteurs_preferes;
    FOREACH auteur_id IN ARRAY auteur_ids
    LOOP
      INSERT INTO _utilisateur_auteur VALUES(user_id, auteur_id);
    END LOOP;

    language_ids = SELECT id_langue FROM _langue WHERE langue IN NEW.langues_lecture;
    FOREACH language_id IN ARRAY language_ids
    LOOP
      INSERT INTO _utilisateur_langue VALUES(user_id, language_id);
    END LOOP;

    buy_ids = SELECT id_raison_achat FROM _raison_achat WHERE raison_achat IN NEW.raisons_achat;
    FOREACH buy_id IN ARRAY buy_ids
    LOOP
      INSERT INTO _utilisateur_raison_achat VALUES(user_id, buy_id);
    END LOOP;
  END;
$$ LANGUAGE 'plpgsql';

CREATE OR REPLACE TRIGGER triggerInsertToutBuveur
INSTEAD OF INSERT
ON toutbuveur FOR EACH ROW
EXECUTE PROCEDURE insertToutBuveur();
